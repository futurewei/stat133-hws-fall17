knitr::opts_chunk$set(echo = TRUE)
library(readr)
# vector of data types (for each column)
col_types <- c(
'character', 'character', 'factor', 'character', 'double','integer', 'integer', 'integer', 'integer','character', 'character','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer'
)
df1 <- read.csv(
'nba2017-player-statistics.csv',
header = TRUE,
colClasses = col_types,
sep = ","
)
df2 <- read.table(
'nba2017-player-statistics.csv',
header = TRUE,
sep = ""
)
df3 <- read.delim(
'nba2017-player-statistics.csv',
header = TRUE,
sep = ","
)
df3 <- data.frame(df3)
str(df3)
transform(df1, Experience = int(Experience) )
transform(df1, Experience = as.numeric(Experience) )
transform(df1, Experience = as.numeric(df1$Experience))
transform(df1, Experience = suppressWarnings(as.numeric(df1$Experience)))
df1$Experience
chartr("R", "0", df1$Experience)
transform(df1, Experience = suppressWarnings(as.numeric(df1$Experience)))
df1$Experience
transform(df1, Experience = as.numeric(df1$Experience))
df1$Experience
df1&Experience <- chartr("R", "0", df1$Experience)
df1$Experience <- chartr("R", "0", df1$Experience)
transform(df1, Experience = as.numeric(df1$Experience))
df1$Experience
df1$Experience <- chartr("R", "0", df1$Experience)
transform(df1, Experience = as.integer(df1$Experience))
df1$Experience
transform(df1, Experience = as.integer(Experience))
df1$Experience
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df1$Experience
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df2$Experience <- chartr("R", "0", df2$Experience)
df1$PTS <-df1$Points3_atts + df1$Points2_atts
df1$Missed_FG <-df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$Missed_FG <-df1$FGA - df1$FGM
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FG <- df1$FGA - df1$FGM
df1$FGA
df1$FGM
library(readr)
# vector of data types (for each column)
col_types <- c(
'character', 'character', 'factor', 'character', 'double','integer', 'integer', 'integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer'
)
df1 <- read.csv(
'nba2017-player-statistics.csv',
header = TRUE,
colClasses = col_types,
sep = ","
)
df2 <- read.table(
'nba2017-player-statistics.csv',
header = TRUE,
sep = ""
)
df3 <- read.delim(
'nba2017-player-statistics.csv',
header = TRUE,
sep = ","
)
df1 <- data.frame(df1)
df2 <- data.frame(df2)
df3 <- data.frame(df3)
str(df2)
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df2$Experience <- chartr("R", "0", df2$Experience)
df3$Experience <- chartr("R", "0", df3$Experience)
df3<-transform(df1, Experience = as.integer(Experience))
df1$Experience
df1$FGA
df1$FGM
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3_atts + df1$Points2_atts
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3 + df1$Points2
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2 + df1$FGM
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
hist(df1$EFF)
print (hist(df1$EFF))
print (xlab="EFF",hist(df1$EFF))
print (hist(df1$EFF),  main="Histogram for Air Passengers", xlab="EFF")
print (hist(df1$EFF),  main="Histogram of EFF", xlab="EFF")
?sort
order(df1$EFF, decreasing=TRUE)
df1$EFF
order(df1$EFF, decreasing=TRUE)
df1$EFF
df1[c(1，2，5，30), c[1：10]]
df1[c(1，2，5，30), c（1：10）]
df1[c(1, 2, 5,30), c(1:10)]
print (df1[c(1, 2, 5,30), c(1:10)])
df1[c(1, 2, 5,30), c(1:10)]
str(df1[c(1, 2, 5,30), c(1:10)])
str(df1[ c(1:10), c(1, 2, 5,30)])
str(df1)
df1[df1$EFF < 0,'Player']
df2 <- read_csv(
'nba2017-player-statistics.csv',
header = TRUE,
colClasses = col_types,
sep = ","
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
header = TRUE,
sep = ","
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
colClasses = col_types,
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = col_types,
)
df1[df1$EFF < 0,'Player']
install.packages("readr")
github <- "https://github.com/ucb-stat133/stat133-fall-2017/raw/master/"
file <- "data/nba2017-player-statistics.csv"
csv <- paste0(github, file)
download.file(url = csv, destfile = 'nba2017-player-statistics.csv')
ls()
experience = replace(experience, experience == "R", 0)
install.packages("readr")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
# vector of data types (for each column)
col_types <- c(
'character', 'character', 'factor', 'character', 'double','integer', 'integer', 'integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer'
)
df1 <- read.csv(
'nba2017-player-statistics.csv',
header = TRUE,
colClasses = col_types,
sep = ","
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = col_types,
)
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2 + df1$FGM
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
print (hist(df1$EFF),  main="Histogram of EFF", xlab="EFF")
str(df1[ c(1:10), c(1, 2, 5,30)])
df1[df1$EFF < 0,'Player']
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = col_types
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = c(
'character', 'character', 'factor', 'character', 'double','integer', 'integer', 'integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer'
)
)
df1&Experience
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df2$Experience <- chartr("R", "0", df2$Experience)
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df1&Experience
df1&Experience
str
str(df1)
str(df1$Experience)
print(df1$Experience)
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2 + df1$FGM
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
print (hist(df1$EFF),  main="Histogram of EFF", xlab="EFF")
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2 + df1$FGM + df1$FTM
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2 + df1$FTM
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
print (hist(df1$EFF),  main="Histogram of EFF", xlab="EFF")
str(df1[ c(1:10), c(1, 2, 5,30)])
df1[df1$EFF < 0,'Player']
cor(df1$EFF)
df1$Missed_FG <- -df1$Missed_FG
df1$Missed_FT <- -df1$Missed_FT
df1$TO <- -df1$TO
cor(c(df1$PTS, df1$REB, df1$AST, df1$STL, df1$BLK, df1$Missed_FG, df1$Missed_FT, df1$TO), df1$EFF)
cor(df1$PTS, df1$EFF)
df1$Missed_FG <- -df1$Missed_FG
df1$Missed_FT <- -df1$Missed_FT
df1$TO <- -df1$TO
cor(df1$PTS, df1$EFF)
cor(df1$REB, df1$EFF)
cor(df1$AST, df1$EFF)
cor(df1$STL, df1$EFF)
cor(df1$BLK, df1$EFF)
cor(df1$Missed_FG, df1$EFF)
cor(df1$Missed_FT, df1$EFF)
cor(df1$TO, df1$EFF)
cor(df1$PTS, df1$EFF)
cor(df1$REB, df1$EFF)
cor(df1$AST, df1$EFF)
cor(df1$STL, df1$EFF)
cor(df1$BLK, df1$EFF)
cor(-df1$Missed_FG, df1$EFF)
cor(-df1$Missed_FT, df1$EFF)
cor(-df1$TO, df1$EFF)
corre[order(-corre$influence),]
corre <- data.frame(
category <- c('PTS', 'REB', 'AST', 'STL', 'BLK', 'MFG','MFT', 'TO'),
influence <- c(cor_pts, cor_reb, cor_ast, cor_stl, cor_blk, cor_mfg, cor_mft, cor_to)
)
cor_pts <-cor(df1$PTS, df1$EFF)
cor_reb<-cor(df1$REB, df1$EFF)
cor_ast<-cor(df1$AST, df1$EFF)
cor_stl<-cor(df1$STL, df1$EFF)
cor_blk<-cor(df1$BLK, df1$EFF)
cor_mfg<-cor(-df1$Missed_FG, df1$EFF)
cor_mft<-cor(-df1$Missed_FT, df1$EFF)
cor_to<-cor(-df1$TO, df1$EFF)
corre <- data.frame(
category <- c('PTS', 'REB', 'AST', 'STL', 'BLK', 'MFG','MFT', 'TO'),
influence <- c(cor_pts, cor_reb, cor_ast, cor_stl, cor_blk, cor_mfg, cor_mft, cor_to)
)
corre[order(-corre$influence),]
corre
corre <- corre[order(-corre$influence),]
corre
barplot(corre$influence,
main = "Correlations between Player Stats and EFF")
barplot(corre$influence,  xlab = corre$category,
main = "Correlations between Player Stats and EFF")
barplot(corre$influence,  ylab = corre$category,
main = "Correlations between Player Stats and EFF")
barplot(corre$influence,
main = "Correlations between Player Stats and EFF")
barplot(x=corre$category, y=corre$influence,
main = "Correlations between Player Stats and EFF")
barplot( corre$influence,
main = "Correlations between Player Stats and EFF")
barplot( corre$influence,
main = "Correlations between Player Stats and EFF",names.arg = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))
barplot( corre$influence,
main = "Correlations between Player Stats and EFF",names.arg = corre$category)
main = "Correlations between Player Stats and EFF", ylim=c(-1, 1), names.arg = corre$category)
barplot( corre$influence,
main = "Correlations between Player Stats and EFF", names.arg = corre$category)
barplot( corre$influence,
main = "Correlations between Player Stats and EFF", ylim=c(-1,1), names.arg = corre$category)
c(df1[df1$MPG < 20,'Player'])
c(df1[df1$MPG == 20,'Player'])
c(df1[df1$MPG = 20,'Player'])
c(df1[df1$MPG == 20,'Player'])
str(df1$MPG)
c(df1[df1$MPG >= 20,'Player'])
players2 <-data.frame(
people <- c(df1[df1$MPG >= 20,'Player'])
)
scatter.smooth(df1$EFF, df1$Salary)
scatter.smooth(df1$EFF, df1$Salary)
lines(lowess(x = df1$EFFe ,y= df1$Salary))
scatter.smooth(df1$EFF, df1$Salary)
lines(lowess(x = df1$EFF ,y= df1$Salary))
scatter.smooth(df1$EFF, df1$Salary)
lines(lowess(x = df1$EF ,y= df1$Salary))
scatter.smooth(df1$EFF, df1$Salary)
lines(lowess(x = df1$EFF ,y= df1$Salary))
cor(df1$EFF, df1$Salary)
print (cor(df1$EFF, df1$Salary))
players2 <-data.frame(
people <- c(df1[df1$MPG >= 20,'Player']),
EFFiciency <-  c(df1[df1$MPG >= 20,'EFF']),
Salary <-  c(df1[df1$MPG >= 20,'Salary'])
)
players2 <-data.frame(
people <- c(df1[df1$MPG >= 20,'Player']),
EFFiciency <-  c(df1[df1$MPG >= 20,'EFF']),
Salary <-  c(df1[df1$MPG >= 20,'Salary'])
)
scatter.smooth(players2$EFFiciency, players2$Salary)
lines(lowess(x = players2$EFFiciency ,y= players2$Salary))
print (cor(players2$EFFiciency, players2$Salary))
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = c(col_character(), col_character(), col_factor(c("C", "PF", "PG", "SF", "SG")), col_character(), col_double(), col_integer(), col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer())
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = list(col_character(), col_character(), col_factor(c("C", "PF", "PG", "SF", "SG")), col_character(), col_double(), col_integer(), col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer())
)
df2
str(df2)
library(readr)
# vector of data types (for each column)
col_types <- c(
'character', 'character', 'factor', 'character', 'double','integer', 'integer', 'integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer', 'integer','integer'
)
df1 <- read.csv(
'nba2017-player-statistics.csv',
header = TRUE,
colClasses = col_types,
sep = ","
)
df2 <- read_csv(
'nba2017-player-statistics.csv',
col_types  = list(col_character(), col_character(), col_factor(c("C", "PF", "PG", "SF", "SG")), col_character(), col_double(), col_integer(), col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer())
)
str(df2)
df1 <- data.frame(df1)
df2 <- data.frame(df2)
str(df2)
str(df1)
df1$Experience <- chartr("R", "0", df1$Experience)
df1<-transform(df1, Experience = as.integer(Experience))
df2$Experience <- chartr("R", "0", df2$Experience)
df2<-transform(df1, Experience = as.integer(Experience))
df1$Missed_FG <- df1$FGA - df1$FGM
df1$Missed_FT <- df1$FTA - df1$FTM
df1$PTS <-df1$Points3*3 + df1$Points2*2 + df1$FTM
df1$REB <-df1$OREB + df1$DREB
df1$MPG <- df1$MIN / df1$GP
df1$EFF <- (df1$PTS + df1$REB + df1$AST + df1$STL + df1$BLK - df1$Missed_FG - df1$Missed_FT - df1$TO) / df1$GP
summary(df1$EFF)
print (hist(df1$EFF),  main="Histogram of EFF", xlab="EFF")
str(df1[ c(1:10), c(1, 2, 5,30)])
df1[df1$EFF < 0,'Player']
cor_pts <-cor(df1$PTS, df1$EFF)
cor_reb<-cor(df1$REB, df1$EFF)
cor_ast<-cor(df1$AST, df1$EFF)
cor_stl<-cor(df1$STL, df1$EFF)
cor_blk<-cor(df1$BLK, df1$EFF)
cor_mfg<-cor(-df1$Missed_FG, df1$EFF)
cor_mft<-cor(-df1$Missed_FT, df1$EFF)
cor_to<-cor(-df1$TO, df1$EFF)
corre <- data.frame(
category <- c('PTS', 'REB', 'AST', 'STL', 'BLK', 'MFG','MFT', 'TO'),
influence <- c(cor_pts, cor_reb, cor_ast, cor_stl, cor_blk, cor_mfg, cor_mft, cor_to)
)
corre <- corre[order(-corre$influence),]
corre
barplot( corre$influence,
main = "Correlations between Player Stats and EFF", ylim=c(-1,1), names.arg = corre$category)
scatter.smooth(df1$EFF, df1$Salary)
lines(lowess(x = df1$EFF ,y= df1$Salary))
print (cor(df1$EFF, df1$Salary))
print ("The relationship between these  players is in positive linear relationship. ")
players2 <-data.frame(
people <- c(df1[df1$MPG >= 20,'Player']),
EFFiciency <-  c(df1[df1$MPG >= 20,'EFF']),
Salary <-  c(df1[df1$MPG >= 20,'Salary'])
)
scatter.smooth(players2$EFFiciency, players2$Salary)
lines(lowess(x = players2$EFFiciency ,y= players2$Salary))
print (cor(players2$EFFiciency, players2$Salary))
---
title: "nba2017-player-statistics-dictionary"
output: github_document
---
## R Markdown
Short Description: The data is used to analyze NBA player's experience and salart relationship.
There's 24 columns and 441 rows[not take title]
Column labels are information like Player, Team, Position, Experience, Salary, Rank,Age, GP, GS, MIN, FGM,
FGA, Points3, Points3_atts, Points2, Points2_atts, FTM, FTA, OREB, DREB,AST, STL, BLK, TO.
It's all standar basic units. Dollar, year for age, point.
Missing values will be converted to 0.
Main source : www.basketball-reference.com
sample data link: https://www.basketball-reference.com/teams/GSW/2017.html
Below is the description of variables according to the glossary of basketball-reference
• Player: first and last names of player
• Team: 3-letter team abbreviation
• Position: player’s position
• Experience: years of experience in NBA (a value of R means rookie)
• Salary: player salary in dollars
• Rank: Rank of player in his team
• Age: Age of Player at the start of February 1st of that season.
• GP: Games Played furing regular season
• GS: Games Started
• MIN: Minutes Played during regular season
• FGM: Field Goals Made
• FGA: Field Goal Attempts
• Points3: 3-Point Field Goals
• Points3_atts: 3-Point Field Goal Attempts
• Points2: 2-Point Field Goals
• Points2_atts: 2-Point Field Goal Attempts
• FTM: Free Throws Made
• FTA: Free Throw Attempts
• OREB: Offensive Rebounds
• DREB: Defensive Rebounds
• AST: Assists
• STL: Steals
• BLK: Blocks
• TO: Turnovers
df1 <- read.csv(
'data/nba2017-player-statistics.csv',
header = TRUE,
colClasses = col_types,
sep = ","
)
df2 <- read_csv(
'data/nba2017-player-statistics.csv',
col_types  = list(col_character(), col_character(), col_factor(c("C", "PF", "PG", "SF", "SG")), col_character(), col_double(), col_integer(), col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer(),col_integer())
)
